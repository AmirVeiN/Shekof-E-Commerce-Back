from io import BytesIO
import random
from django.db import models
from django.core.files import File
    
class Product(models.Model):
    
    Name = models.CharField(max_length=450)
    Brand = models.CharField(max_length=450)
    Slug = models.CharField(max_length=450)
    Pack = models.CharField(max_length=450, null=True , blank=True)
    Price = models.BigIntegerField()
    Image = models.TextField()
    Category = models.CharField(max_length=450)
    InternalMemory = models.IntegerField()
    Ram = models.IntegerField()
    Screen = models.FloatField()
    Networks = models.CharField(max_length=450)
    PictureRes = models.IntegerField()
    InStockColor = models.CharField(max_length=450)
    Waranti = models.IntegerField()
    InStock = models.IntegerField()
    Count = models.IntegerField()
    ProductId = models.CharField(max_length=450)
    Description = models.CharField(max_length=450)
    DisplayType = models.CharField(max_length=450)
    Refreshrate = models.IntegerField()
    Resolation = models.CharField(max_length=450)
    Pixeldensity = models.CharField(max_length=450)
    AspectRatio = models.CharField(max_length=450)
    Screentobodyratio = models.CharField(max_length=450)
    HDR = models.CharField(max_length=450)
    Maximumbrightness = models.CharField(max_length=450)
    OtherDisplay = models.CharField(max_length=450)
    SpeakerType = models.CharField(max_length=450)
    Jack = models.IntegerField()
    AudioFeatures = models.CharField(max_length=450)
    ModelNumbers = models.TextField()
    PriceRelease = models.CharField(max_length=450)
    Announced = models.CharField(max_length=450)
    Supplystatus = models.IntegerField()
    Releasedate = models.CharField(max_length=450)
    SAR = models.CharField(max_length=450, null=True , blank=True)
    SAREU = models.CharField(max_length=450, null=True , blank=True)
    Os = models.CharField(max_length=450)
    OsInRelease = models.IntegerField()
    Descriptionos = models.CharField(max_length=450)
    Dimensions = models.CharField(max_length=450)
    Weight = models.IntegerField()
    Backmaterial = models.CharField(max_length=450)
    Frontmaterial = models.CharField(max_length=450)
    Framematerial = models.CharField(max_length=450)
    Colors = models.CharField(max_length=450)
    Chipmodel = models.CharField(max_length=450)
    Chipprocess = models.CharField(max_length=450)
    Numbercores = models.CharField(max_length=450)
    Coredetails = models.TextField()
    GPU = models.CharField(max_length=450)
    Specificationschip = models.CharField(max_length=450, null=True , blank=True)
    Storageram = models.CharField(max_length=450)
    Rams = models.CharField(max_length=450)
    Storages = models.CharField(max_length=450)
    Storagetype = models.CharField(max_length=450)
    Microsd = models.IntegerField()
    Typemicrosd = models.CharField(max_length=450, null=True , blank=True)
    Rearcameraconfiguration = models.CharField(max_length=450)
    Maincamera = models.IntegerField()
    Descriptionmaincamera = models.CharField(max_length=450)
    Secondcamera = models.IntegerField(null=True , blank=True)
    Descriptionsecondcamera = models.CharField(max_length=450, null=True , blank=True)
    Thirdcamera = models.IntegerField(default=0,null=True , blank=True)
    Descriptionthirdcamera = models.CharField(max_length=450, null=True , blank=True)
    Maximumvideores = models.CharField(max_length=450, null=True , blank=True)
    Resoltionvideo = models.CharField(max_length=450, null=True , blank=True)
    Filmingdescription = models.CharField(max_length=450, null=True , blank=True)
    Frontmaincamera = models.CharField(max_length=450)
    Frontdescriptionmaincamera = models.CharField(max_length=450)
    Maximumfrontvideores = models.CharField(max_length=450)
    Resoltionfrontvideo = models.CharField(max_length=450)
    Descriptionvideofront = models.CharField(max_length=450)
    Batterycapacity = models.IntegerField(default=0)
    Batterycapacityclass = models.CharField(max_length=450, null=True , blank=True)
    Batterytype = models.CharField(max_length=450, null=True , blank=True)
    ReplaceableBattery = models.IntegerField(default=0)
    Maxchargingpower = models.IntegerField(default=0 , blank=True, null=True)
    Fastchargesupport = models.IntegerField(default=0)
    Wirelesscharge = models.IntegerField(default=0)
    Maxwirelesschargingpower = models.IntegerField(default=0)
    Batteryfeatures = models.CharField(max_length=450, null=True , blank=True)
    Timeforcharging = models.CharField(max_length=450, null=True , blank=True)
    Connectionport = models.CharField(max_length=450, null=True , blank=True)
    Otgsupport = models.IntegerField(default=0)
    Sensors = models.CharField(max_length=450, null=True , blank=True)
    Sensorstype = models.CharField(max_length=450, null=True , blank=True)
    WiFi = models.CharField(max_length=450, null=True , blank=True)
    Desciptionwifi = models.CharField(max_length=450, null=True , blank=True)
    Bluetooth = models.FloatField()
    Bluetoothdescription = models.CharField(max_length=450, null=True , blank=True)
    Communicationtechnology = models.CharField(max_length=450)
    support5g = models.IntegerField(default=0)
    Simcard = models.CharField(max_length=450)
    Gps = models.CharField(max_length=450)
    Sell = models.IntegerField()
    Star = models.IntegerField()
    date_added = models.DateTimeField(auto_now_add=True ,null=True , blank=True)
    
    # Image = models.ImageField(upload_to='uploads/', blank=True , null=True)
    # class Meta:
    #     ordering = ('-date_added',)
        
    def __str__(self):
        return f"{self.Name}, {self.pk} , {self.Price}, {self.InStock}"
    
    # def get_absolute_url(self):
    #     return f'/{self.category.slug}/{self.slug}/'
    
